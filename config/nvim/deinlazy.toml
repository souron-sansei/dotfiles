# ==========================================================
# completion
# ==========================================================

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
on_i = 1
hook_source = '''
source ~/.config/nvim/plugins/deoplete.rc.vim
'''

[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "has('lua')"
on_i = 1
hook_source = '''
source ~/.config/nvim/plugins/neocomplete.rc.vim
'''

[[plugins]]
repo = 'ujihisa/neco-look'
on_source = ['neocomplete.vim', 'deoplete.nvim']

[[plugins]]
repo = 'Shougo/neco-syntax'
on_source = ['neocomplete.vim', 'deoplete.nvim', 'nvim-completion-manager']

[[plugins]]
repo = 'Konfekt/FastFold'
on_source = ['neocomplete.vim', 'deoplete.nvim']

[[plugins]]
repo = 'Shougo/echodoc.vim'
on_source = ['neocomplete.vim', 'deoplete.nvim']

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = 'deoplete.nvim'
if = "has('nvim')"
on_ft = 'python'
hook_source = '''
if has('unix')
  let g:python_host_prog = '/usr/bin/python2'
  let g:python3_host_prog = '/usr/bin/python3'
endif
if has('mac')
  let g:python_host_prog = '/usr/local/bin/python2'
  let g:python3_host_prog = '/usr/local/bin/python3'
endif
'''

[[plugins]]
repo = 'zchee/deoplete-go'
depends = 'deoplete.nvim'
if = "has('nvim')"
on_ft = 'go'
build = 'make'
hook_source = '''
let g:deoplete#sources#go#gocode_binary = $GOPATH.'/bin/gocode'
let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
let g:deoplete#sources#go#use_cache = 1
let g:deoplete#sources#go#json_directory = '~/.cache/deoplete/go/$GOOS_$GOARCH'
'''

# [[plugins]]
# repo = 'mhartington/nvim-typescript'
# depends = 'deoplete.nvim'
# if = "has('nvim')"
# on_ft = 'typescript'
# hook_source = '''
# "let g:nvim_typescript#vue_support = 1
# '''

[[plugins]]
repo = 'fszymanski/deoplete-emoji'
depends = 'deoplete.nvim'
if = "has('nvim')"
on_ft = 'markdown'

# [[plugins]]
# repo = 'roxma/nvim-completion-manager'
# if = "has('nvim')"
# on_ft = ['vue', 'rust']
# hook_source = '''
# set shortmess+=c
# inoremap <expr> <CR> (pumvisible() ? "\<c-y>\<cr>" : "\<CR>")
# imap <expr> <CR>  (pumvisible() ?  "\<c-y>\<Plug>(expand_or_nl)" : "\<CR>")
# imap <expr> <Plug>(expand_or_nl) (cm#completed_is_snippet() ? "\<C-U>":"\<CR>")
# inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
# inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
# '''
# 
# [[plugins]]
# repo = 'Shougo/neosnippet'
# depends = 'nvim-completion-manager'
# on_ft = ['vue', 'rust']
# hook_source = '''
# '''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
depends = 'deoplete.nvim'
if = "has('nvim')"
on_ft = ['rust']
hook_source = '''
set hidden
"call LanguageClient_setLoggingLevel('DEBUG')
let g:LanguageClient_serverCommands = {
    \ 'rust': ['rustup', 'run', 'nightly', 'rls'],
    \ }
let g:LanguageClient_autoStart = 1
'''

# ==========================================================
# block search and precious
# ==========================================================

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-function'

[[plugins]]
repo = 'osyo-manga/vim-operator-search'
depends = ['vim-operator-user', 'vim-textobj-function', 'vim-textobj-user']
hook_add = '''
nmap <Space>/ <Plug>(operator-search)if
'''
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim', 'vim-textobj-user']
on_ft = ['vim', 'toml']

# ==========================================================
# lang
# ==========================================================

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'vim-jp/cpp-vim'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
'''

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = 'python'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'

[[plugins]]
repo = 'dag/vim-fish'
on_ft = 'fish'

[[plugins]]
repo = 'tikhomirov/vim-glsl'
on_ft = 'glsl'

[[plugins]]
repo = 'neovimhaskell/haskell-vim'
on_ft = ['haskell', 'cabal']

[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
on_ft = ['markdown', 'mkd']

[[plugins]]
repo = 'udalov/kotlin-vim'
on_ft = 'kotlin'

[[plugins]]
repo = 'keith/swift.vim'
on_ft = 'swift'

[[plugins]]
repo = 'posva/vim-vue'
on_ft = 'vue'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = 'html'
